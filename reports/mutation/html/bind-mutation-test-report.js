document.querySelector('mutation-test-report-app').report = {"files":{"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/App.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":4,"line":30},"start":{"column":37,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"1","location":{"end":{"column":6,"line":27},"start":{"column":65,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":4,"line":35},"start":{"column":22,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"3","location":{"end":{"column":75,"line":34},"start":{"column":18,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"4","location":{"end":{"column":4,"line":41},"start":{"column":51,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"5","location":{"end":{"column":77,"line":40},"start":{"column":20,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"6","location":{"end":{"column":4,"line":52},"start":{"column":19,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"7","location":{"end":{"column":4,"line":67},"start":{"column":31,"line":54}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"9","location":{"end":{"column":4,"line":92},"start":{"column":18,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"8","location":{"end":{"column":10,"line":64},"start":{"column":36,"line":62}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"11","location":{"end":{"column":60,"line":78},"start":{"column":20,"line":78}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"10","location":{"end":{"column":83,"line":71},"start":{"column":46,"line":71}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"12","location":{"end":{"column":67,"line":82},"start":{"column":20,"line":82}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"13","location":{"end":{"column":76,"line":86},"start":{"column":20,"line":86}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"14","location":{"end":{"column":4,"line":106},"start":{"column":12,"line":94}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"}],"source":"import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport {\n  About,\n  FavoritePokemons,\n  NotFound,\n  Pokedex,\n  PokemonDetails,\n} from './components';\n\nimport {\n  readFavoritePokemonIds,\n  updateFavoritePokemons,\n} from './services/pokedexService';\n\nimport pokemons from './data';\n\nimport './App.css';\n\nclass App extends Component {\n  static setIsPokemonFavoriteById() {\n    const favoritePokemonIds = readFavoritePokemonIds();\n    const isPokemonFavorite = pokemons.reduce((acc, pokemon) => {\n      acc[pokemon.id] = favoritePokemonIds.includes(pokemon.id);\n      return acc;\n    }, {});\n\n    return isPokemonFavorite;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { isPokemonFavoriteById: App.setIsPokemonFavoriteById() };\n  }\n\n  onUpdateFavoritePokemons(pokemonId, isFavorite) {\n    updateFavoritePokemons(pokemonId, isFavorite);\n\n    this.setState(({ isPokemonFavoriteById: App.setIsPokemonFavoriteById() }));\n  }\n\n  renderPokedex() {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <Pokedex\n        pokemons={ pokemons }\n        isPokemonFavoriteById={ isPokemonFavoriteById }\n      />\n    );\n  }\n\n  renderPokemonDetails(match) {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <PokemonDetails\n        isPokemonFavoriteById={ isPokemonFavoriteById }\n        match={ match }\n        pokemons={ pokemons }\n        onUpdateFavoritePokemons={ (pokemonId, isFavorite) => (\n          this.onUpdateFavoritePokemons(pokemonId, isFavorite)\n        ) }\n      />\n    );\n  }\n\n  renderRoutes() {\n    const { isPokemonFavoriteById } = this.state;\n    const favoritePokemons = pokemons.filter(({ id }) => isPokemonFavoriteById[id]);\n\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={ ({ match }) => this.renderPokedex(match) }\n        />\n        <Route\n          path=\"/pokemons/:id\"\n          render={ ({ match }) => this.renderPokemonDetails(match) }\n        />\n        <Route\n          path=\"/favorites\"\n          render={ () => <FavoritePokemons pokemons={ favoritePokemons } /> }\n        />\n        <Route path=\"/about\" component={ About } />\n        <Route component={ NotFound } />\n      </Switch>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Pokédex</h1>\n        <nav>\n          <Link className=\"link\" to=\"/\">Home</Link>\n          <Link className=\"link\" to=\"/about\">About</Link>\n          <Link className=\"link\" to=\"/favorites\">Favorite Pokémons</Link>\n        </nav>\n        {this.renderRoutes()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/components/About.js":{"language":"javascript","mutants":[{"id":"15","location":{"end":{"column":2,"line":20},"start":{"column":15,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React from 'react';\nimport './about.css';\n\nconst About = () => (\n  <section>\n    <h2>About Pokédex</h2>\n    <section>\n      <p>\n        This application simulates a Pokédex, a\n        digital encliclopedia containing all Pokémons\n      </p>\n      <p>One can filter Pokémons by type, and see more details for each one of them</p>\n      <img\n        className=\"pokedex-image\"\n        src=\"https://cdn.bulbagarden.net/upload/thumb/8/86/Gen_I_Pok%C3%A9dex.png/800px-Gen_I_Pok%C3%A9dex.png\"\n        alt=\"Pokédex\"\n      />\n    </section>\n  </section>\n);\n\nexport default About;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/components/Button.js":{"language":"javascript","mutants":[{"id":"17","location":{"end":{"column":43,"line":15},"start":{"column":17,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":2,"line":22},"start":{"column":16,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"18","location":{"end":{"column":2,"line":30},"start":{"column":20,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"19","location":{"end":{"column":2,"line":37},"start":{"column":23,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"20","location":{"end":{"column":16,"line":34},"start":{"column":14,"line":34}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"21","location":{"end":{"column":18,"line":35},"start":{"column":13,"line":35}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"22","location":{"end":{"column":17,"line":36},"start":{"column":15,"line":36}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.css';\n\nconst Button = ({\n  className,\n  children,\n  disabled,\n  onClick,\n  dataTestId,\n}) => (\n  <button\n    onClick={ onClick }\n    className={ `button-text ${className}` }\n    disabled={ disabled }\n    data-testid={ dataTestId }\n    type=\"button\"\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  dataTestId: PropTypes.string,\n};\n\nButton.defaultProps = {\n  children: null,\n  className: '',\n  disabled: false,\n  dataTestId: '',\n};\n\nexport default Button;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/components/FavoritePokemons.js":{"language":"javascript","mutants":[{"id":"23","location":{"end":{"column":4,"line":18},"start":{"column":21,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"24","location":{"end":{"column":4,"line":26},"start":{"column":41,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"25","location":{"end":{"column":4,"line":37},"start":{"column":28,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"26","location":{"end":{"column":66,"line":34},"start":{"column":23,"line":34}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"27","location":{"end":{"column":4,"line":50},"start":{"column":12,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"28","location":{"end":{"column":45,"line":42},"start":{"column":21,"line":42}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"29","location":{"end":{"column":45,"line":42},"start":{"column":21,"line":42}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"30","location":{"end":{"column":45,"line":42},"start":{"column":21,"line":42}},"mutatorName":"EqualityOperator","replacement":"pokemons.length !== ZERO","status":"Survived"},{"id":"31","location":{"end":{"column":2,"line":55},"start":{"column":30,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"32","location":{"end":{"column":2,"line":59},"start":{"column":33,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"33","location":{"end":{"column":15,"line":58},"start":{"column":13,"line":58}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pokemonType } from '../types';\nimport Pokemon from './Pokemon';\n\nimport './favorite-pokemons.css';\n\nconst ZERO = 0;\n\nclass FavoritePokemons extends React.Component {\n  static notFound() {\n    return (\n      <div>\n        <p>No favorite pokemon found</p>\n      </div>\n    );\n  }\n\n  static renderFavoritePokemon(pokemon) {\n    return (\n      <div key={ pokemon.id } className=\"favorite-pokemon\">\n        <Pokemon pokemon={ pokemon } isFavorite />\n      </div>\n    );\n  }\n\n  renderFavoritePokemons() {\n    const { pokemons } = this.props;\n    const { renderFavoritePokemon } = FavoritePokemons;\n\n    return (\n      <div className=\"favorite-pokemons\">\n        {pokemons.map((pokemon) => renderFavoritePokemon(pokemon))}\n      </div>\n    );\n  }\n\n  render() {\n    const { notFound } = FavoritePokemons;\n    const { pokemons } = this.props;\n    const isEmpty = pokemons.length === ZERO;\n\n    return (\n      <div>\n        <h2> Favorite pokémons </h2>\n        {isEmpty ? notFound() : this.renderFavoritePokemons()}\n      </div>\n    );\n  }\n}\n\nFavoritePokemons.propTypes = {\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired),\n};\n\nFavoritePokemons.defaultProps = {\n  pokemons: [],\n};\n\nexport default FavoritePokemons;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/components/NotFound.js":{"language":"javascript","mutants":[{"id":"34","location":{"end":{"column":2,"line":16},"start":{"column":18,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React from 'react';\nimport './not-found.css';\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h2>\n      Page requested not found\n      <span role=\"img\" aria-label=\"Crying emoji\"> 😭 </span>\n    </h2>\n    <img\n      className=\"not-found-image\"\n      src=\"https://media.giphy.com/media/kNSeTs31XBZ3G/giphy.gif\"\n      alt=\"Pikachu crying because the page requested was not found\"\n    />\n  </div>\n);\n\nexport default NotFound;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/components/Pokedex.js":{"language":"javascript","mutants":[{"id":"35","location":{"end":{"column":4,"line":13},"start":{"column":22,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"36","location":{"end":{"column":58,"line":12},"start":{"column":18,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"37","location":{"end":{"column":56,"line":12},"start":{"column":51,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"38","location":{"end":{"column":4,"line":17},"start":{"column":32,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"39","location":{"end":{"column":52,"line":16},"start":{"column":19,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"40","location":{"end":{"column":4,"line":23},"start":{"column":33,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":6,"line":22},"start":{"column":19,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"43","location":{"end":{"column":66,"line":21},"start":{"column":23,"line":21}},"mutatorName":"ArithmeticOperator","replacement":"(state.pokemonIndex + 1) * numberOfPokemons","status":"Survived"},{"id":"42","location":{"end":{"column":68,"line":21},"start":{"column":7,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":46,"line":21},"start":{"column":24,"line":21}},"mutatorName":"ArithmeticOperator","replacement":"state.pokemonIndex - 1","status":"Survived"},{"id":"45","location":{"end":{"column":4,"line":33},"start":{"column":27,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"46","location":{"end":{"column":6,"line":32},"start":{"column":41,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"47","location":{"end":{"column":33,"line":30},"start":{"column":11,"line":30}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"48","location":{"end":{"column":33,"line":30},"start":{"column":11,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"49","location":{"end":{"column":33,"line":30},"start":{"column":11,"line":30}},"mutatorName":"EqualityOperator","replacement":"filteredType !== 'all'","status":"Killed"},{"id":"50","location":{"end":{"column":33,"line":30},"start":{"column":28,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"51","location":{"end":{"column":46,"line":30},"start":{"column":42,"line":30}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"52","location":{"end":{"column":43,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"53","location":{"end":{"column":43,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"54","location":{"end":{"column":43,"line":31},"start":{"column":14,"line":31}},"mutatorName":"EqualityOperator","replacement":"pokemon.type !== filteredType","status":"Survived"},{"id":"55","location":{"end":{"column":4,"line":39},"start":{"column":23,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"56","location":{"end":{"column":84,"line":38},"start":{"column":12,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"57","location":{"end":{"column":77,"line":38},"start":{"column":40,"line":38}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"58","location":{"end":{"column":77,"line":38},"start":{"column":61,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"59","location":{"end":{"column":81,"line":38},"start":{"column":79,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"60","location":{"end":{"column":4,"line":64},"start":{"column":31,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"61","location":{"end":{"column":53,"line":47},"start":{"column":21,"line":47}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"63","location":{"end":{"column":10,"line":61},"start":{"column":27,"line":52}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"62","location":{"end":{"column":52,"line":47},"start":{"column":47,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"64","location":{"end":{"column":54,"line":56},"start":{"column":23,"line":56}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"65","location":{"end":{"column":23,"line":59},"start":{"column":14,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"66","location":{"end":{"column":4,"line":90},"start":{"column":12,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"67","location":{"end":{"column":68,"line":83},"start":{"column":21,"line":83}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"68","location":{"end":{"column":50,"line":84},"start":{"column":22,"line":84}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"69","location":{"end":{"column":50,"line":84},"start":{"column":22,"line":84}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"70","location":{"end":{"column":50,"line":84},"start":{"column":22,"line":84}},"mutatorName":"EqualityOperator","replacement":"filteredPokemons.length < 1","status":"Survived"},{"id":"71","location":{"end":{"column":50,"line":84},"start":{"column":22,"line":84}},"mutatorName":"EqualityOperator","replacement":"filteredPokemons.length > 1","status":"Survived"},{"id":"72","location":{"end":{"column":2,"line":96},"start":{"column":21,"line":93}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Button from './Button';\nimport Pokemon from './Pokemon';\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pokemonIndex: 0, filteredType: 'all' };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0 });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState((state) => (\n      { pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons }\n    ));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter((pokemon) => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  renderPokemonButtonsPanel() {\n    const pokemonTypes = this.fetchPokemonTypes();\n\n    return (\n      <div className=\"pokedex-buttons-panel\">\n        <Button\n          onClick={ () => this.filterPokemons('all') }\n          className=\"filter-button\"\n        >\n          All\n        </Button>\n        {pokemonTypes.map((type) => (\n          <Button\n            dataTestId=\"pokemon-type-button\"\n            key={ type }\n            onClick={ () => this.filterPokemons(type) }\n            className=\"filter-button\"\n          >\n            {`${type}`}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const { isPokemonFavoriteById } = this.props;\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const { pokemonIndex } = this.state;\n    const pokemon = filteredPokemons[pokemonIndex];\n\n    return (\n      <div className=\"pokedex\">\n        <h2>Encountered pokémons</h2>\n        <Pokemon\n          pokemon={ pokemon }\n          isFavorite={ isPokemonFavoriteById[pokemon.id] }\n        />\n        {this.renderPokemonButtonsPanel()}\n        <Button\n          dataTestId=\"next-pokemon\"\n          className=\"pokedex-button\"\n          onClick={ () => this.nextPokemon(filteredPokemons.length) }\n          disabled={ filteredPokemons.length <= 1 }\n        >\n          Próximo pokémon\n        </Button>\n      </div>\n    );\n  }\n}\n\nPokedex.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default Pokedex;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/components/Pokemon.js":{"language":"javascript","mutants":[{"id":"73","location":{"end":{"column":2,"line":33},"start":{"column":63,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"74","location":{"end":{"column":49,"line":16},"start":{"column":40,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"75","location":{"end":{"column":48,"line":17},"start":{"column":39,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"76","location":{"end":{"column":57,"line":19},"start":{"column":12,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"77","location":{"end":{"column":78,"line":21},"start":{"column":10,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"78","location":{"end":{"column":78,"line":21},"start":{"column":10,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"79","location":{"end":{"column":78,"line":21},"start":{"column":10,"line":21}},"mutatorName":"LogicalOperator","replacement":"showDetailsLink || <Link to={`pokemons/${id}`}>More details</Link>","status":"Survived"},{"id":"80","location":{"end":{"column":56,"line":21},"start":{"column":40,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"81","location":{"end":{"column":28,"line":23},"start":{"column":18,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"82","location":{"end":{"column":53,"line":23},"start":{"column":37,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"83","location":{"end":{"column":8,"line":30},"start":{"column":8,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"84","location":{"end":{"column":8,"line":30},"start":{"column":8,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"85","location":{"end":{"column":8,"line":30},"start":{"column":8,"line":24}},"mutatorName":"LogicalOperator","replacement":"isFavorite || <img className=\"favorite-icon\" src=\"/star-icon.svg\" alt={`${name} is marked as favorite`} />","status":"Survived"},{"id":"87","location":{"end":{"column":2,"line":39},"start":{"column":21,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"86","location":{"end":{"column":48,"line":28},"start":{"column":17,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"88","location":{"end":{"column":2,"line":43},"start":{"column":24,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"89","location":{"end":{"column":24,"line":42},"start":{"column":20,"line":42}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { pokemonType } from '../types';\n\nimport './pokemon.css';\n\nconst Pokemon = ({ pokemon, showDetailsLink, isFavorite }) => {\n  const { averageWeight, id, image, name, type } = pokemon;\n  const { measurementUnit, value } = averageWeight;\n\n  return (\n    <div className=\"pokemon\">\n      <div className=\"pokemon-overview\">\n        <p data-testid=\"pokemon-name\">{`${name}`}</p>\n        <p data-testid=\"pokemonType\">{`${type}`}</p>\n        <p data-testid=\"pokemon-weight\">\n          {`Average weight: ${value} ${measurementUnit}`}\n        </p>\n        {showDetailsLink && <Link to={ `pokemons/${id}` }>More details</Link>}\n      </div>\n      <img src={ `${image}` } alt={ `${name} sprite` } />\n      {isFavorite && (\n        <img\n          className=\"favorite-icon\"\n          src=\"/star-icon.svg\"\n          alt={ `${name} is marked as favorite` }\n        />\n      )}\n    </div>\n  );\n};\n\nPokemon.propTypes = {\n  isFavorite: PropTypes.bool.isRequired,\n  pokemon: pokemonType.isRequired,\n  showDetailsLink: PropTypes.bool,\n};\n\nPokemon.defaultProps = {\n  showDetailsLink: true,\n};\n\nexport default Pokemon;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/components/PokemonDetails.js":{"language":"javascript","mutants":[{"id":"90","location":{"end":{"column":4,"line":24},"start":{"column":43,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"91","location":{"end":{"column":41,"line":13},"start":{"column":14,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"92","location":{"end":{"column":12,"line":20},"start":{"column":24,"line":15}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"93","location":{"end":{"column":34,"line":17},"start":{"column":26,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"94","location":{"end":{"column":61,"line":17},"start":{"column":43,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"95","location":{"end":{"column":4,"line":39},"start":{"column":37,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"96","location":{"end":{"column":15,"line":30},"start":{"column":12,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"97","location":{"end":{"column":15,"line":32},"start":{"column":12,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"98","location":{"end":{"column":24,"line":35},"start":{"column":12,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"100","location":{"end":{"column":4,"line":51},"start":{"column":24,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":4,"line":45},"start":{"column":22,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"101","location":{"end":{"column":52,"line":50},"start":{"column":26,"line":50}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"102","location":{"end":{"column":52,"line":50},"start":{"column":38,"line":50}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"103","location":{"end":{"column":52,"line":50},"start":{"column":38,"line":50}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"104","location":{"end":{"column":52,"line":50},"start":{"column":38,"line":50}},"mutatorName":"EqualityOperator","replacement":"id !== givenId","status":"Survived"},{"id":"106","location":{"end":{"column":88,"line":65},"start":{"column":15,"line":65}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"105","location":{"end":{"column":4,"line":71},"start":{"column":46,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"107","location":{"end":{"column":4,"line":97},"start":{"column":12,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"108","location":{"end":{"column":39,"line":86},"start":{"column":14,"line":86}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"109","location":{"end":{"column":34,"line":89},"start":{"column":29,"line":89}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"110","location":{"end":{"column":2,"line":109},"start":{"column":28,"line":100}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"112","location":{"end":{"column":6,"line":105},"start":{"column":29,"line":103}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"111","location":{"end":{"column":4,"line":106},"start":{"column":26,"line":102}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Pokemon from './Pokemon';\n\nimport './pokemon-details.css';\n\nclass PokemonDetails extends React.Component {\n  static renderHabitat({ foundAt, name }) {\n    return (\n      <section>\n        <h2>{`Game Locations of ${name}`}</h2>\n        <div className=\"pokemon-habitat\">\n          {foundAt.map(({ location, map }) => (\n            <div key={ location }>\n              <img src={ `${map}` } alt={ `${name} location` } />\n              <p><em>{location}</em></p>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n\n  static renderSummary({ summary }) {\n    return (\n      <section>\n        <h2>\n          {' '}\n          Summary\n          {' '}\n        </h2>\n        <p>\n          {`${summary}`}\n        </p>\n      </section>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.renderFavoriteInput = this.renderFavoriteInput.bind(this);\n  }\n\n  findPokemon(givenId) {\n    const { pokemons } = this.props;\n\n    return pokemons.find(({ id }) => id === givenId);\n  }\n\n  renderFavoriteInput(pokemonId, isFavorite) {\n    const { onUpdateFavoritePokemons } = this.props;\n\n    return (\n      <form className=\"favorite-form\">\n        <label htmlFor=\"favorite\">\n          Pokémon favoritado?\n          <input\n            type=\"checkbox\"\n            id=\"favorite\"\n            checked={ isFavorite }\n            onChange={\n              ({ target: { checked } }) => onUpdateFavoritePokemons(pokemonId, checked)\n            }\n          />\n        </label>\n      </form>\n    );\n  }\n\n  render() {\n    const { renderHabitat, renderSummary } = PokemonDetails;\n    const { renderFavoriteInput } = this;\n    const {\n      match: { params: { id } },\n      isPokemonFavoriteById,\n    } = this.props;\n\n    const pokemon = this.findPokemon(parseInt(id, 10));\n    const isFavorite = isPokemonFavoriteById[id];\n\n    return (\n      <section className=\"pokemon-details\">\n        <h2>{`${pokemon.name} Details`}</h2>\n        <Pokemon\n          pokemon={ pokemon }\n          showDetailsLink={ false }\n          isFavorite={ isFavorite }\n        />\n        {renderSummary(pokemon)}\n        {renderHabitat(pokemon)}\n        {renderFavoriteInput(pokemon.id, isFavorite)}\n      </section>\n    );\n  }\n}\n\nPokemonDetails.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  onUpdateFavoritePokemons: PropTypes.func.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default PokemonDetails;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/data.js":{"language":"javascript","mutants":[{"id":"113","location":{"end":{"column":2,"line":200},"start":{"column":18,"line":1}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"114","location":{"end":{"column":4,"line":23},"start":{"column":3,"line":2}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"115","location":{"end":{"column":20,"line":4},"start":{"column":11,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"116","location":{"end":{"column":21,"line":5},"start":{"column":11,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"117","location":{"end":{"column":6,"line":9},"start":{"column":20,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"118","location":{"end":{"column":19,"line":7},"start":{"column":14,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"119","location":{"end":{"column":28,"line":8},"start":{"column":24,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"120","location":{"end":{"column":70,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"121","location":{"end":{"column":79,"line":11},"start":{"column":15,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"122","location":{"end":{"column":6,"line":21},"start":{"column":14,"line":12}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"124","location":{"end":{"column":42,"line":14},"start":{"column":19,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"123","location":{"end":{"column":8,"line":16},"start":{"column":7,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"125","location":{"end":{"column":77,"line":15},"start":{"column":14,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"126","location":{"end":{"column":8,"line":20},"start":{"column":7,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"127","location":{"end":{"column":38,"line":18},"start":{"column":19,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"128","location":{"end":{"column":82,"line":19},"start":{"column":14,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"129","location":{"end":{"column":112,"line":22},"start":{"column":14,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"130","location":{"end":{"column":4,"line":53},"start":{"column":3,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"131","location":{"end":{"column":23,"line":26},"start":{"column":11,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"132","location":{"end":{"column":17,"line":27},"start":{"column":11,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"133","location":{"end":{"column":6,"line":31},"start":{"column":20,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"134","location":{"end":{"column":19,"line":29},"start":{"column":14,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"135","location":{"end":{"column":28,"line":30},"start":{"column":24,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"136","location":{"end":{"column":68,"line":32},"start":{"column":12,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"137","location":{"end":{"column":82,"line":33},"start":{"column":15,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"138","location":{"end":{"column":6,"line":51},"start":{"column":14,"line":34}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"139","location":{"end":{"column":8,"line":38},"start":{"column":7,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"140","location":{"end":{"column":34,"line":36},"start":{"column":19,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"141","location":{"end":{"column":77,"line":37},"start":{"column":14,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"142","location":{"end":{"column":8,"line":42},"start":{"column":7,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"143","location":{"end":{"column":34,"line":40},"start":{"column":19,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"144","location":{"end":{"column":77,"line":41},"start":{"column":14,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"145","location":{"end":{"column":8,"line":46},"start":{"column":7,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"146","location":{"end":{"column":34,"line":44},"start":{"column":19,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"147","location":{"end":{"column":77,"line":45},"start":{"column":14,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"148","location":{"end":{"column":8,"line":50},"start":{"column":7,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"149","location":{"end":{"column":38,"line":48},"start":{"column":19,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"150","location":{"end":{"column":81,"line":49},"start":{"column":14,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"151","location":{"end":{"column":119,"line":52},"start":{"column":14,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"152","location":{"end":{"column":4,"line":83},"start":{"column":3,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"153","location":{"end":{"column":21,"line":56},"start":{"column":11,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"154","location":{"end":{"column":16,"line":57},"start":{"column":11,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"156","location":{"end":{"column":19,"line":59},"start":{"column":14,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"155","location":{"end":{"column":6,"line":61},"start":{"column":20,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"157","location":{"end":{"column":28,"line":60},"start":{"column":24,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"158","location":{"end":{"column":68,"line":62},"start":{"column":12,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"159","location":{"end":{"column":80,"line":63},"start":{"column":15,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"160","location":{"end":{"column":6,"line":81},"start":{"column":14,"line":64}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"161","location":{"end":{"column":8,"line":68},"start":{"column":7,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"162","location":{"end":{"column":35,"line":66},"start":{"column":19,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"163","location":{"end":{"column":78,"line":67},"start":{"column":14,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"164","location":{"end":{"column":8,"line":72},"start":{"column":7,"line":69}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"165","location":{"end":{"column":35,"line":70},"start":{"column":19,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"166","location":{"end":{"column":78,"line":71},"start":{"column":14,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"167","location":{"end":{"column":8,"line":76},"start":{"column":7,"line":73}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"168","location":{"end":{"column":32,"line":74},"start":{"column":19,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"169","location":{"end":{"column":81,"line":75},"start":{"column":14,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"170","location":{"end":{"column":8,"line":80},"start":{"column":7,"line":77}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"171","location":{"end":{"column":40,"line":78},"start":{"column":19,"line":78}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"172","location":{"end":{"column":83,"line":79},"start":{"column":14,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"173","location":{"end":{"column":114,"line":82},"start":{"column":14,"line":82}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"174","location":{"end":{"column":4,"line":101},"start":{"column":3,"line":84}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"175","location":{"end":{"column":18,"line":86},"start":{"column":11,"line":86}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"176","location":{"end":{"column":19,"line":87},"start":{"column":11,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"177","location":{"end":{"column":6,"line":91},"start":{"column":20,"line":88}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"178","location":{"end":{"column":19,"line":89},"start":{"column":14,"line":89}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"179","location":{"end":{"column":28,"line":90},"start":{"column":24,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"181","location":{"end":{"column":77,"line":93},"start":{"column":15,"line":93}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"180","location":{"end":{"column":68,"line":92},"start":{"column":12,"line":92}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"183","location":{"end":{"column":8,"line":98},"start":{"column":7,"line":95}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"182","location":{"end":{"column":6,"line":99},"start":{"column":14,"line":94}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"184","location":{"end":{"column":42,"line":96},"start":{"column":19,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"185","location":{"end":{"column":84,"line":97},"start":{"column":14,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"186","location":{"end":{"column":115,"line":100},"start":{"column":14,"line":100}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"187","location":{"end":{"column":4,"line":119},"start":{"column":3,"line":102}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"188","location":{"end":{"column":21,"line":104},"start":{"column":11,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"189","location":{"end":{"column":20,"line":105},"start":{"column":11,"line":105}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"190","location":{"end":{"column":6,"line":109},"start":{"column":20,"line":106}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"191","location":{"end":{"column":20,"line":107},"start":{"column":14,"line":107}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"192","location":{"end":{"column":28,"line":108},"start":{"column":24,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"193","location":{"end":{"column":70,"line":110},"start":{"column":12,"line":110}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"195","location":{"end":{"column":6,"line":117},"start":{"column":14,"line":112}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"194","location":{"end":{"column":80,"line":111},"start":{"column":15,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"197","location":{"end":{"column":40,"line":114},"start":{"column":19,"line":114}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"196","location":{"end":{"column":8,"line":116},"start":{"column":7,"line":113}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"198","location":{"end":{"column":83,"line":115},"start":{"column":14,"line":115}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"199","location":{"end":{"column":125,"line":118},"start":{"column":14,"line":118}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"200","location":{"end":{"column":4,"line":137},"start":{"column":3,"line":120}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"201","location":{"end":{"column":16,"line":122},"start":{"column":11,"line":122}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"202","location":{"end":{"column":20,"line":123},"start":{"column":11,"line":123}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"203","location":{"end":{"column":6,"line":127},"start":{"column":20,"line":124}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"205","location":{"end":{"column":28,"line":126},"start":{"column":24,"line":126}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"204","location":{"end":{"column":19,"line":125},"start":{"column":14,"line":125}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"207","location":{"end":{"column":75,"line":129},"start":{"column":15,"line":129}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"206","location":{"end":{"column":68,"line":128},"start":{"column":12,"line":128}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"208","location":{"end":{"column":6,"line":135},"start":{"column":14,"line":130}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"209","location":{"end":{"column":8,"line":134},"start":{"column":7,"line":131}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"210","location":{"end":{"column":35,"line":132},"start":{"column":19,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"211","location":{"end":{"column":84,"line":133},"start":{"column":14,"line":133}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"212","location":{"end":{"column":117,"line":136},"start":{"column":14,"line":136}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"213","location":{"end":{"column":4,"line":159},"start":{"column":3,"line":138}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"214","location":{"end":{"column":21,"line":140},"start":{"column":11,"line":140}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"215","location":{"end":{"column":17,"line":141},"start":{"column":11,"line":141}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"216","location":{"end":{"column":6,"line":145},"start":{"column":20,"line":142}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"217","location":{"end":{"column":20,"line":143},"start":{"column":14,"line":143}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"219","location":{"end":{"column":68,"line":146},"start":{"column":12,"line":146}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"218","location":{"end":{"column":28,"line":144},"start":{"column":24,"line":144}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"221","location":{"end":{"column":6,"line":157},"start":{"column":14,"line":148}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"220","location":{"end":{"column":80,"line":147},"start":{"column":15,"line":147}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"223","location":{"end":{"column":35,"line":150},"start":{"column":19,"line":150}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"222","location":{"end":{"column":8,"line":152},"start":{"column":7,"line":149}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"224","location":{"end":{"column":78,"line":151},"start":{"column":14,"line":151}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"225","location":{"end":{"column":8,"line":156},"start":{"column":7,"line":153}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"227","location":{"end":{"column":79,"line":155},"start":{"column":14,"line":155}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"226","location":{"end":{"column":39,"line":154},"start":{"column":19,"line":154}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"228","location":{"end":{"column":108,"line":158},"start":{"column":14,"line":158}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"229","location":{"end":{"column":4,"line":177},"start":{"column":3,"line":160}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"230","location":{"end":{"column":20,"line":162},"start":{"column":11,"line":162}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"231","location":{"end":{"column":19,"line":163},"start":{"column":11,"line":163}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"232","location":{"end":{"column":6,"line":167},"start":{"column":20,"line":164}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"233","location":{"end":{"column":21,"line":165},"start":{"column":14,"line":165}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"234","location":{"end":{"column":28,"line":166},"start":{"column":24,"line":166}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"235","location":{"end":{"column":68,"line":168},"start":{"column":12,"line":168}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"236","location":{"end":{"column":79,"line":169},"start":{"column":15,"line":169}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"237","location":{"end":{"column":6,"line":175},"start":{"column":14,"line":170}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"238","location":{"end":{"column":8,"line":174},"start":{"column":7,"line":171}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"239","location":{"end":{"column":42,"line":172},"start":{"column":19,"line":172}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"240","location":{"end":{"column":84,"line":173},"start":{"column":14,"line":173}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"241","location":{"end":{"column":105,"line":176},"start":{"column":14,"line":176}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"242","location":{"end":{"column":4,"line":199},"start":{"column":3,"line":178}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"243","location":{"end":{"column":22,"line":180},"start":{"column":11,"line":180}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"244","location":{"end":{"column":19,"line":181},"start":{"column":11,"line":181}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"245","location":{"end":{"column":6,"line":185},"start":{"column":20,"line":182}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"246","location":{"end":{"column":20,"line":183},"start":{"column":14,"line":183}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"247","location":{"end":{"column":28,"line":184},"start":{"column":24,"line":184}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"248","location":{"end":{"column":68,"line":186},"start":{"column":12,"line":186}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"249","location":{"end":{"column":81,"line":187},"start":{"column":15,"line":187}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"250","location":{"end":{"column":6,"line":197},"start":{"column":14,"line":188}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"251","location":{"end":{"column":8,"line":192},"start":{"column":7,"line":189}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"252","location":{"end":{"column":35,"line":190},"start":{"column":19,"line":190}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"253","location":{"end":{"column":78,"line":191},"start":{"column":14,"line":191}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"254","location":{"end":{"column":8,"line":196},"start":{"column":7,"line":193}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"255","location":{"end":{"column":40,"line":194},"start":{"column":19,"line":194}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"256","location":{"end":{"column":81,"line":195},"start":{"column":14,"line":195}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"257","location":{"end":{"column":114,"line":198},"start":{"column":14,"line":198}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"const pokemons = [\n  {\n    id: 25,\n    name: 'Pikachu',\n    type: 'Electric',\n    averageWeight: {\n      value: '6.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/b/b2/Spr_5b_025_m.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Pikachu_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Kanto Viridian Forest',\n        map: 'https://cdn.bulbagarden.net/upload/0/08/Kanto_Route_2_Map.png',\n      },\n      {\n        location: 'Kanto Power Plant',\n        map: 'https://cdn.bulbagarden.net/upload/b/bd/Kanto_Celadon_City_Map.png',\n      },\n    ],\n    summary: 'This intelligent Pokémon roasts hard berries with electricity to make them tender enough to eat.',\n  },\n  {\n    id: 4,\n    name: 'Charmander',\n    type: 'Fire',\n    averageWeight: {\n      value: '8.5',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/0/0a/Spr_5b_004.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Charmander_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Alola Route 3',\n        map: 'https://cdn.bulbagarden.net/upload/9/93/Alola_Route_3_Map.png',\n      },\n      {\n        location: 'Kanto Route 3',\n        map: 'https://cdn.bulbagarden.net/upload/4/4a/Kanto_Route_3_Map.png',\n      },\n      {\n        location: 'Kanto Route 4',\n        map: 'https://cdn.bulbagarden.net/upload/2/24/Kanto_Route_4_Map.png',\n      },\n      {\n        location: 'Kanto Rock Tunnel',\n        map: 'https://cdn.bulbagarden.net/upload/6/6f/Kanto_Rock_Tunnel_Map.png',\n      },\n    ],\n    summary: 'The flame on its tail shows the strength of its life force. If it is weak, the flame also burns weakly.',\n  },\n  {\n    id: 10,\n    name: 'Caterpie',\n    type: 'Bug',\n    averageWeight: {\n      value: '2.9',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/8/83/Spr_5b_010.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Caterpie_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Johto Route 30',\n        map: 'https://cdn.bulbagarden.net/upload/7/76/Johto_Route_30_Map.png',\n      },\n      {\n        location: 'Johto Route 31',\n        map: 'https://cdn.bulbagarden.net/upload/2/2b/Johto_Route_31_Map.png',\n      },\n      {\n        location: 'Ilex Forest',\n        map: 'https://cdn.bulbagarden.net/upload/a/ae/Johto_Ilex_Forest_Map.png',\n      },\n      {\n        location: 'Johto National Park',\n        map: 'https://cdn.bulbagarden.net/upload/4/4e/Johto_National_Park_Map.png',\n      },\n    ],\n    summary: 'For protection, it releases a horrible stench from the antennae on its head to drive away enemies.',\n  },\n  {\n    id: 23,\n    name: 'Ekans',\n    type: 'Poison',\n    averageWeight: {\n      value: '6.9',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/1/18/Spr_5b_023.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Ekans_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Goldenrod Game Corner',\n        map: 'https://cdn.bulbagarden.net/upload/e/ec/Johto_Goldenrod_City_Map.png',\n      },\n    ],\n    summary: 'It can freely detach its jaw to swallow large prey whole. It can become too heavy to move, however.',\n  },\n  {\n    id: 65,\n    name: 'Alakazam',\n    type: 'Psychic',\n    averageWeight: {\n      value: '48.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/8/88/Spr_5b_065_m.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Alakazam_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Unova Accumula Town',\n        map: 'https://cdn.bulbagarden.net/upload/4/44/Unova_Accumula_Town_Map.png',\n      },\n    ],\n    summary: 'Closing both its eyes heightens all its other senses. This enables it to use its abilities to their extremes.',\n  },\n  {\n    id: 151,\n    name: 'Mew',\n    type: 'Psychic',\n    averageWeight: {\n      value: '4.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/4/43/Spr_5b_151.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Mew_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Faraway Island',\n        map: 'https://cdn.bulbagarden.net/upload/e/e4/Hoenn_Faraway_Island_Map.png',\n      },\n    ],\n    summary: 'Apparently, it appears only to those people who are pure of heart and have a strong desire to see it.',\n  },\n  {\n    id: 78,\n    name: 'Rapidash',\n    type: 'Fire',\n    averageWeight: {\n      value: '95.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/5/58/Spr_5b_078.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Rapidash_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Kanto Route 28',\n        map: 'https://cdn.bulbagarden.net/upload/5/5b/Kanto_Route_28_Map.png',\n      },\n      {\n        location: 'Johto Mount Silver',\n        map: 'https://cdn.bulbagarden.net/upload/9/95/Johto_Mt_Silver_Map.png',\n      },\n    ],\n    summary: 'At full gallop, its four hooves barely touch the ground because it moves so incredibly fast.',\n  },\n  {\n    id: 143,\n    name: 'Snorlax',\n    type: 'Normal',\n    averageWeight: {\n      value: '460.0',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/4/40/Spr_5b_143.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Snorlax_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Kanto Vermillion City',\n        map: 'https://cdn.bulbagarden.net/upload/5/54/Kanto_Vermilion_City_Map.png',\n      },\n    ],\n    summary: 'What sounds like its cry may actually be its snores or the rumblings of its hungry belly.',\n  },\n  {\n    id: 148,\n    name: 'Dragonair',\n    type: 'Dragon',\n    averageWeight: {\n      value: '16.5',\n      measurementUnit: 'kg',\n    },\n    image: 'https://cdn.bulbagarden.net/upload/2/2c/Spr_5b_148.png',\n    moreInfo: 'https://bulbapedia.bulbagarden.net/wiki/Dragonair_(Pok%C3%A9mon)',\n    foundAt: [\n      {\n        location: 'Johto Route 45',\n        map: 'https://cdn.bulbagarden.net/upload/2/21/Johto_Route_45_Map.png',\n      },\n      {\n        location: 'Johto Dragon\\'s Den',\n        map: 'https://cdn.bulbagarden.net/upload/1/1e/Johto_Dragons_Den_Map.png',\n      },\n    ],\n    summary: 'They say that if it emits an aura from its whole body, the weather will begin to change instantly.',\n  },\n];\n\nexport default pokemons;\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/index.js":{"language":"javascript","mutants":[{"id":"258","location":{"end":{"column":33,"line":12},"start":{"column":27,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/serviceWorker.js":{"language":"javascript","mutants":[{"id":"259","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"260","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"261","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"LogicalOperator","replacement":"(window.location.hostname === 'localhost' || // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]') && // 127.0.0.0/8 are considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)","status":"Survived"},{"id":"262","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"263","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"264","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"LogicalOperator","replacement":"window.location.hostname === 'localhost' && // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]'","status":"Survived"},{"id":"265","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"266","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"268","location":{"end":{"column":43,"line":14},"start":{"column":32,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"267","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"EqualityOperator","replacement":"window.location.hostname !== 'localhost'","status":"Survived"},{"id":"269","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"270","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"271","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"EqualityOperator","replacement":"// [::1] is the IPv6 localhost address.\nwindow.location.hostname !== '[::1]'","status":"Survived"},{"id":"272","location":{"end":{"column":41,"line":16},"start":{"column":34,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"273","location":{"end":{"column":2,"line":55},"start":{"column":34,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"274","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"275","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"276","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'production' || 'serviceWorker' in navigator","status":"Survived"},{"id":"277","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"278","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"279","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'production'","status":"Survived"},{"id":"280","location":{"end":{"column":44,"line":24},"start":{"column":32,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"281","location":{"end":{"column":63,"line":24},"start":{"column":48,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"282","location":{"end":{"column":4,"line":54},"start":{"column":78,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"283","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"284","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"285","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"EqualityOperator","replacement":"publicUrl.origin === window.location.origin","status":"Survived"},{"id":"287","location":{"end":{"column":35,"line":34},"start":{"column":29,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"286","location":{"end":{"column":6,"line":32},"start":{"column":54,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"288","location":{"end":{"column":6,"line":53},"start":{"column":43,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"289","location":{"end":{"column":66,"line":35},"start":{"column":21,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"290","location":{"end":{"column":22,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"291","location":{"end":{"column":22,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"292","location":{"end":{"column":8,"line":49},"start":{"column":24,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"293","location":{"end":{"column":10,"line":48},"start":{"column":50,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"294","location":{"end":{"column":68,"line":46},"start":{"column":13,"line":45}},"mutatorName":"ArithmeticOperator","replacement":"'This web app is being served cache-first by a service ' - 'worker. To learn more, visit https://bit.ly/CRA-PWA'","status":"Survived"},{"id":"295","location":{"end":{"column":69,"line":45},"start":{"column":13,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"296","location":{"end":{"column":68,"line":46},"start":{"column":15,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"297","location":{"end":{"column":8,"line":52},"start":{"column":14,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"298","location":{"end":{"column":2,"line":99},"start":{"column":41,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"299","location":{"end":{"column":6,"line":95},"start":{"column":27,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"300","location":{"end":{"column":8,"line":94},"start":{"column":42,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"301","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"302","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"303","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"EqualityOperator","replacement":"installingWorker != null","status":"Survived"},{"id":"304","location":{"end":{"column":10,"line":65},"start":{"column":39,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"306","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"305","location":{"end":{"column":10,"line":93},"start":{"column":48,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"307","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"308","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"EqualityOperator","replacement":"installingWorker.state !== 'installed'","status":"Survived"},{"id":"309","location":{"end":{"column":53,"line":67},"start":{"column":42,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"310","location":{"end":{"column":12,"line":92},"start":{"column":55,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"311","location":{"end":{"column":51,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"312","location":{"end":{"column":51,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"313","location":{"end":{"column":14,"line":81},"start":{"column":53,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"314","location":{"end":{"column":79,"line":74},"start":{"column":17,"line":73}},"mutatorName":"ArithmeticOperator","replacement":"'New content is available and will be used when all ' - 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'","status":"Survived"},{"id":"315","location":{"end":{"column":70,"line":73},"start":{"column":17,"line":73}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"316","location":{"end":{"column":79,"line":74},"start":{"column":19,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"317","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"318","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"319","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"LogicalOperator","replacement":"config || config.onUpdate","status":"Survived"},{"id":"320","location":{"end":{"column":16,"line":80},"start":{"column":46,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"321","location":{"end":{"column":14,"line":91},"start":{"column":20,"line":81}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"323","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"322","location":{"end":{"column":63,"line":85},"start":{"column":27,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"324","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"325","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"LogicalOperator","replacement":"config || config.onSuccess","status":"Survived"},{"id":"326","location":{"end":{"column":16,"line":90},"start":{"column":47,"line":88}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"327","location":{"end":{"column":6,"line":98},"start":{"column":21,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"328","location":{"end":{"column":64,"line":97},"start":{"column":21,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"329","location":{"end":{"column":2,"line":129},"start":{"column":49,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"330","location":{"end":{"column":4,"line":105},"start":{"column":16,"line":103}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"331","location":{"end":{"column":44,"line":104},"start":{"column":14,"line":104}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"332","location":{"end":{"column":32,"line":104},"start":{"column":16,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"333","location":{"end":{"column":42,"line":104},"start":{"column":34,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"334","location":{"end":{"column":6,"line":123},"start":{"column":23,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"335","location":{"end":{"column":62,"line":108},"start":{"column":48,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"336","location":{"end":{"column":74,"line":111},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"337","location":{"end":{"column":74,"line":111},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"338","location":{"end":{"column":74,"line":111},"start":{"column":9,"line":110}},"mutatorName":"LogicalOperator","replacement":"response.status === 404 && contentType != null && contentType.indexOf('javascript') === -1","status":"Survived"},{"id":"339","location":{"end":{"column":32,"line":110},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"340","location":{"end":{"column":32,"line":110},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"342","location":{"end":{"column":73,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"341","location":{"end":{"column":32,"line":110},"start":{"column":9,"line":110}},"mutatorName":"EqualityOperator","replacement":"response.status !== 404","status":"Survived"},{"id":"343","location":{"end":{"column":73,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"344","location":{"end":{"column":73,"line":111},"start":{"column":10,"line":111}},"mutatorName":"LogicalOperator","replacement":"contentType != null || contentType.indexOf('javascript') === -1","status":"Survived"},{"id":"346","location":{"end":{"column":29,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"345","location":{"end":{"column":29,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"347","location":{"end":{"column":29,"line":111},"start":{"column":10,"line":111}},"mutatorName":"EqualityOperator","replacement":"contentType == null","status":"Survived"},{"id":"348","location":{"end":{"column":73,"line":111},"start":{"column":33,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"349","location":{"end":{"column":73,"line":111},"start":{"column":33,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"350","location":{"end":{"column":73,"line":111},"start":{"column":33,"line":111}},"mutatorName":"EqualityOperator","replacement":"contentType.indexOf('javascript') !== -1","status":"Survived"},{"id":"351","location":{"end":{"column":65,"line":111},"start":{"column":53,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"352","location":{"end":{"column":73,"line":111},"start":{"column":71,"line":111}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"354","location":{"end":{"column":10,"line":118},"start":{"column":60,"line":114}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"353","location":{"end":{"column":8,"line":119},"start":{"column":9,"line":112}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"355","location":{"end":{"column":12,"line":117},"start":{"column":48,"line":115}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"356","location":{"end":{"column":8,"line":122},"start":{"column":14,"line":119}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"358","location":{"end":{"column":72,"line":126},"start":{"column":9,"line":126}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"357","location":{"end":{"column":6,"line":128},"start":{"column":18,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"360","location":{"end":{"column":35,"line":132},"start":{"column":7,"line":132}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"359","location":{"end":{"column":2,"line":137},"start":{"column":30,"line":131}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"361","location":{"end":{"column":35,"line":132},"start":{"column":7,"line":132}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"362","location":{"end":{"column":22,"line":132},"start":{"column":7,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"363","location":{"end":{"column":4,"line":136},"start":{"column":37,"line":132}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"364","location":{"end":{"column":6,"line":135},"start":{"column":56,"line":133}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/services/pokedexService.js":{"language":"javascript","mutants":[{"id":"365","location":{"end":{"column":2,"line":3},"start":{"column":39,"line":1}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"366","location":{"end":{"column":63,"line":2},"start":{"column":3,"line":2}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"367","location":{"end":{"column":63,"line":2},"start":{"column":3,"line":2}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"368","location":{"end":{"column":63,"line":2},"start":{"column":3,"line":2}},"mutatorName":"LogicalOperator","replacement":"JSON.parse(localStorage.getItem('favoritePokemonIds')) && []","status":"Killed"},{"id":"369","location":{"end":{"column":55,"line":2},"start":{"column":35,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"370","location":{"end":{"column":63,"line":2},"start":{"column":61,"line":2}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"371","location":{"end":{"column":2,"line":7},"start":{"column":30,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"372","location":{"end":{"column":44,"line":6},"start":{"column":24,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"373","location":{"end":{"column":2,"line":14},"start":{"column":46,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"374","location":{"end":{"column":63,"line":11},"start":{"column":31,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"376","location":{"end":{"column":79,"line":18},"start":{"column":55,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"375","location":{"end":{"column":2,"line":21},"start":{"column":51,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"377","location":{"end":{"column":79,"line":18},"start":{"column":63,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"378","location":{"end":{"column":79,"line":18},"start":{"column":63,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"379","location":{"end":{"column":79,"line":18},"start":{"column":63,"line":18}},"mutatorName":"EqualityOperator","replacement":"id === pokemonId","status":"Survived"},{"id":"380","location":{"end":{"column":2,"line":25},"start":{"column":39,"line":23}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"export const readFavoritePokemonIds = () => (\n  JSON.parse(localStorage.getItem('favoritePokemonIds')) || []\n);\n\nconst saveFavoritePokemons = (pokemons) => (\n  localStorage.setItem('favoritePokemonIds', JSON.stringify(pokemons))\n);\n\nconst addPokemonToFavorites = (pokemonId) => {\n  const favoritePokemons = readFavoritePokemonIds();\n  const newFavoritePokemons = [...favoritePokemons, pokemonId];\n\n  saveFavoritePokemons(newFavoritePokemons);\n};\n\nconst removePokemonFromFavorites = (pokemonId) => {\n  const favoritePokemons = readFavoritePokemonIds();\n  const newFavoritePokemons = favoritePokemons.filter((id) => id !== pokemonId);\n\n  saveFavoritePokemons(newFavoritePokemons);\n};\n\nexport const updateFavoritePokemons = (pokemonId, isFavorite) => (\n  isFavorite ? addPokemonToFavorites(pokemonId) : removePokemonFromFavorites(pokemonId)\n);\n"},"/Users/dilenio/Documents/Trybe/sd-06-project-react-testing-library/src/types/index.js":{"language":"javascript","mutants":[{"id":"381","location":{"end":{"column":2,"line":27},"start":{"column":34,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"382","location":{"end":{"column":4,"line":16},"start":{"column":24,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"383","location":{"end":{"column":4,"line":20},"start":{"column":26,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import {\n  arrayOf,\n  bool,\n  number,\n  objectOf,\n  shape,\n  string,\n} from 'prop-types';\n\nexport const isPokemonFavoriteByIdType = objectOf(bool);\n\nexport const pokemonType = shape({\n  averageWeight: shape({\n    measurementUnit: string,\n    value: string,\n  }),\n  foundAt: arrayOf(shape({\n    location: string,\n    map: string,\n  })),\n  id: number,\n  image: string,\n  moreInfo: string,\n  name: string,\n  summary: string,\n  type: string,\n});\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};